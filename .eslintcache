[{"/home/lenovo/Documents/programs/react-typescript-quiz/src/reportWebVitals.ts":"1","/home/lenovo/Documents/programs/react-typescript-quiz/src/api.ts":"2","/home/lenovo/Documents/programs/react-typescript-quiz/src/App.tsx":"3","/home/lenovo/Documents/programs/react-typescript-quiz/src/index.tsx":"4","/home/lenovo/Documents/programs/react-typescript-quiz/src/utils.ts":"5","/home/lenovo/Documents/programs/react-typescript-quiz/src/components/Search.tsx":"6","/home/lenovo/Documents/programs/react-typescript-quiz/src/components/JobsCards.tsx":"7"},{"size":425,"mtime":1646504486684,"results":"8","hashOfConfig":"9"},{"size":495,"mtime":1646627103840,"results":"10","hashOfConfig":"9"},{"size":1758,"mtime":1646628447426,"results":"11","hashOfConfig":"9"},{"size":557,"mtime":1646584404966,"results":"12","hashOfConfig":"9"},{"size":275,"mtime":1646515323747,"results":"13","hashOfConfig":"9"},{"size":1329,"mtime":1646614402168,"results":"14","hashOfConfig":"9"},{"size":1636,"mtime":1646626354298,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1mu5rx8",{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30"},"/home/lenovo/Documents/programs/react-typescript-quiz/src/reportWebVitals.ts",[],"/home/lenovo/Documents/programs/react-typescript-quiz/src/api.ts",[],"/home/lenovo/Documents/programs/react-typescript-quiz/src/App.tsx",[],"/home/lenovo/Documents/programs/react-typescript-quiz/src/index.tsx",[],"/home/lenovo/Documents/programs/react-typescript-quiz/src/utils.ts",[],"/home/lenovo/Documents/programs/react-typescript-quiz/src/components/Search.tsx",[],"/home/lenovo/Documents/programs/react-typescript-quiz/src/components/JobsCards.tsx",["31"],"/* eslint-disable react/jsx-no-target-blank */\nimport React from \"react\";\nimport { List, Avatar, Space, Card } from \"antd\";\nimport { RightCircleFilled } from \"@ant-design/icons\";\nimport { getFormattedDate, showTotal } from \"../api\";\nimport { Grid } from \"@mui/material\";\n\nconst JobsCards: React.FC<any | Jobs> = ({ jobs }) => {\n  return (\n    <List\n      itemLayout=\"vertical\"\n      size=\"small\"\n      pagination={{\n        total: jobs.length,\n        pageSizeOptions: [\"2\", \"3\", \"5\", \"10\", \"20\", \"30\"],\n        showTotal,\n        position: \"top\",\n      }}\n      dataSource={jobs}\n      style={{ margin: \"48px 0\" }}\n      footer={\n        <div>\n          <b>total Jobs</b> {jobs.length}\n        </div>\n      }\n      renderItem={(item: Job) => (\n        <Card\n          style={{\n            margin: \"24px 0px\",\n            boxShadow: \"0 0 5px rgba(0,0,0,0.5)\",\n          }}\n          bordered\n          extra={getFormattedDate(item.publication_date)}\n        >\n          <List.Item\n            key={item.title}\n            actions={[\n              <a href={item.url} target=\"_blank\">\n                <Space>\n                  {React.createElement(RightCircleFilled)}\n                  Apply Now\n                </Space>\n              </a>,\n            ]}\n          >\n            <List.Item.Meta\n              avatar={<Avatar src={item.company_logo} />}\n              title={<a href={item.url}>{item.company_name}</a>}\n              description={item.title}\n            />\n            <div dangerouslySetInnerHTML={{ __html: item.description }} />\n          </List.Item>\n        </Card>\n      )}\n    />\n  );\n};\n\nexport default JobsCards;\n",{"ruleId":"32","severity":1,"message":"33","line":6,"column":10,"nodeType":"34","messageId":"35","endLine":6,"endColumn":14},"@typescript-eslint/no-unused-vars","'Grid' is defined but never used.","Identifier","unusedVar"]